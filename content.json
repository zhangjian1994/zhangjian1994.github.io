[{"title":"1","date":"2017-03-28T06:25:14.000Z","path":"2017/03/28/1/","text":"","tags":[]},{"title":"hexo的入门","date":"2017-03-20T15:14:43.000Z","path":"2017/03/20/hexo的入门/","text":"hexo的优点1.依赖少（仅依赖node），易于安装2.台湾人写的，不用担心对中文支持不好3.对程序员友好，要是愿意折腾还是有的折腾的基于以上原因，我最终选择了hexo作为维护博客的工具。 ##安装 首先，我假设你的机器上已经安装了node。安装好node，就可以用强大的npm命令来安装其他东西。 调出命令行，执行下面命令安装hexo：npm install hexo -g 安装完后就可以执行hexo命令，这个页面列出了所有的命令。 作为入门者，不用上来就学会所有的命令。只在关键路径上，有几个命令需要掌握，下面逐个讲解： hexo init 目录名例如 hexo init blog上面这条命令会新建一个名为blog的文件夹，然后在里面创建一大堆文件。完成后进入这个文件夹，以后就都要在这里捣鼓了。 ##写文章 文章指的就是组成博客的一篇篇post，一般用md格式，除非你的md原稿找不到了，html格式也认。 把写好的md文件放在source/_posts目录下，它将是你以后最常打交道的目录。该目录下的hello-world.md是一个文章的范例，打开它，看到下面内容：三条横线上面的部分是文章的元数据，见文知义没什么可说的。其中date还是要强调一下。因为经常要按时间排序、归档，所以hexo给每篇文章都打了一个时间戳。如果不显式指定时间，hexo默认会用md文件的创建时间。 ##运行网站 在blog目录下，执行命令 hexo server用浏览器打开localhost:4000就可以看到你的博客网站了！ ##生成静态文件注意，你刚刚看到的页面并不是静态的。若要得到静态文件，还需执行一条命令： hexo generate该命令会创建一个目录public，并在public下生成所有的静态文件。有了这些静态文件，只要有一个web server(例如Nginx)就可以独立运行网站了，完全没有其他依赖，这是WordPress和ghost无法比拟的。","tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}]},{"title":"hexo--简单、快速、强大的node.js静态框架","date":"2017-03-15T13:57:48.000Z","path":"2017/03/15/hexo-简单、快速、强大的node-js静态框架/","text":"hexo是一款基于Node.js的静态博客框架。目前在GitHub上已有1375 star 和 219 fork。 特性风一般的速度Hexo基于Node.js，支持多进程，几百篇文章也可以秒生成。 流畅的撰写支持GitHub Flavored Markdown和所有Octopress的插件。*扩展性Hexo支持EJS、Swig和Stylus。通过插件支持Haml、Jade和Less. 快速入门安装前提是必须先安装 Node.js，至于怎么安装自己 Google 吧 npm install hexo -g仅需一步就把 Hexo 本体和所有相依套件安装完毕，很简单吧？ 升级更新hexo到最新版 npm update hexo -g 初始化hexo init &lt;folder&gt; 如果指定 ，便会在目前的资料夹建立一个名为 的新资料夹；否则会在目前资料夹初始化。 创建新博客hexo new &quot;Hello World&quot; 生成网站hexo generate 服务器hexo server 伺服器会跑在 http://localhost:port （port 预设为 4000，可在 _config.yml 设定），也可以搭配 Pow 使用： cd ~/.pow ln -s /path/to/myapp基本使用差不多就是这样子，非常简单。","tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}]},{"title":"HTML的基础语法","date":"2017-03-15T13:32:07.000Z","path":"2017/03/15/HTML的基础语法/","text":"HTML(Hyper Text Mark-up Language超文本标记语言)：不是编程语言，而是一种描述性的标记语言，用于描述网页中内容的显示方式，比如文字以什么颜色、大小来显示等，这些都是利用Html标记来实现。 HTML的文档结构所有的网页文件，通过都是四对标记来构成文档的骨架，它们是： &lt;html&gt; &lt;head&gt; &lt;title&gt; 标题 &lt;/title&gt; &lt;/head&gt; &lt;body&gt; 正文 &lt;/body&gt; 小结&lt;html&gt;…&lt;/html&gt;标识网页文件的开始与结束，所有的Html元素，都要放在这对标记中。 &lt;head&gt;…&lt;/head&gt;标识网页文件的头部信息，如标题、搜索引擎关键字等 &lt;title&gt;…&lt;/title&gt;标识网页文件的标题 &lt;body&gt;…&lt;/body&gt;标识网页文件的主体部分 常见的HTML的标记语法1.单标记 一．&lt;标记名称&gt; 单一型，无属性值 如：&lt;br/&gt;——表示换行符 二．&lt;标记名称属性=”属性值”&gt; 单一型，有属性值 如：&lt;hr width=”80%”/&gt; 2.双标记 三．&lt;标记名称&gt;…&lt;/标记名称&gt; 没有属性值 如：&lt;title&gt;…&lt;title&gt; 四．&lt;标记名称属性=”属性值”&gt;…&lt;/标记名称&gt; 有属性值 如：&lt;body bgcolor=”red”&gt;…&lt;/body&gt; 注释格式： &lt;!—注释内容--&gt; Body属性 &lt;body bgcolor=”背景颜色” background=”背景图像” text=”文本颜色” link=”链接文本颜色” vlink=”访问过的文本颜色” alink=”激活的连接文本颜色” leftmargin=”左边界”&gt; 标记语法：&lt;font color=”文本颜色” size=“字号”&gt;文本&lt;/font&gt; 段落标记| align | Left | 左对齐 | | | Center | 居中 | | | Right | 右对齐 | 总结以上就是我们在学习html中经常用到的语法，如果想更详细的了解html语法的话，请查看[HTML参考手册](http://www.jb51.net/w3school/tags/index.htm)。","tags":[{"name":"HTML","slug":"HTML","permalink":"http://yoursite.com/tags/HTML/"}]},{"title":"Markdown的认识与入门","date":"2017-02-19T05:22:39.000Z","path":"2017/02/19/Markdown的认识与入门/","text":"Markdown 是一种轻量级的「标记语言」，它的优点很多，目前也被越来越多的写作爱好者，撰稿者广泛使用。看到这里请不要被「标记」、「语言」所迷惑，Markdown 的语法十分简单。常用的标记符号也不超过十个，这种相对于更为复杂的HTML 标记语言来说，Markdown 可谓是十分轻量的，学习成本也不需要太多，且一旦熟悉这种语法规则，会有一劳永逸的效果。 认识Markdown在刚才的导语里提到，Markdown 是一种用来写作的轻量级「标记语言」，它用简洁的语法代替排版，而不像一般我们用的字处理软件 Word 或 Pages 有大量的排版、字体设置。它使我们专心于码字，用「标记」语法，来代替常见的排版格式。例如此文从内容到格式，甚至插图，键盘就可以通通搞定了。目前来看，支持 Markdown 语法的编辑器有很多，包括很多网站（例如简书）也支持了 Markdown 的文字录入。Markdown 从写作到完成，导出格式随心所欲，你可以导出 HTML 格式的文件用来网站发布，也可以十分方便的导出 PDF 格式，这种格式写出的简历更能得到 HR 的好感。甚至可以利用 CloudApp 这种云服务工具直接上传至网页用来分享你的文章，全球最大的轻博客平台 Tumblr，也支持使用 Mou 这类 Markdown 工具进行编辑并直接上传。 Markdown 官方文档这里可以看到官方的 Markdown 语法规则文档，当然，后文我也会用自己的方式，阐述这些语法在实际使用中的用法。创始人 John Gruber 的 Markdown 语法说明Markdown 中文版语法说明 使用 Markdown 的优点 专注你的文字内容而不是排版样式。 轻松的导出 HTML、PDF 和本身的 .md 文件。 纯文本内容，兼容所有的文本编辑器与字处理软件。 可读，直观。适合所有人的写作语言。 Markdown 语法的简要规则标题标题是每篇文章都需要也是最常用的格式，在 Markdown 中，如果一段文字被定义为标题，只要在这段文字前加 # 号即可。 一级标题二级标题三级标题以此类推，总共六级标题，建议在井号后加一个空格，这是最标准的 Markdown 语法。 列表熟悉 HTML 的同学肯定知道有序列表与无序列表的区别，在 Markdown 下，列表的显示只需要在文字前加上 - 或 * 即可变为无序列表，有序列表则直接在文字前加 1. 2. 3. 符号要和文字之间加上一个字符的空格。 引用如果你需要引用一小段别处的句子，那么就要用引用的格式。 例如这样 只需要在文本前加入 &gt; 这种尖括号（大于号）即可 图片和链接插入链接与插入图片的语法很像，区别在一个 !号 插入图片的地址需要图床，这里推荐 CloudApp 的服务，生成URL地址即可。 粗体与斜体Markdown 的粗体和斜体也非常简单，用两个 包含一段文本就是粗体的语法，用一个 包含一段文本就是斜体的语法。 例如：这里是粗体 这里是斜体","tags":[{"name":"Markdown","slug":"Markdown","permalink":"http://yoursite.com/tags/Markdown/"}]}]